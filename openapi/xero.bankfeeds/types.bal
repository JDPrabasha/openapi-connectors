// Copyright (c) 2021 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
//
// WSO2 Inc. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

public type FeedConnection record {
    # GUID used to identify the Account.
    string id?;
    # This account identifier is generated by the financial institute (FI). This must be unique for your financial institute.
    string accountToken?;
    # String(40) when AccountType is BANK String(4) when AccountType is CREDITCARD The Account Number is used to match the feed to a Xero Bank Account. The API will create a new Xero Bank Account if a match to an existing Xero Bank Account is not found. Only the last 4 digits must be supplied for Credit Card numbers. Must be included if AccountId is not specified.
    string accountNumber?;
    # The Account Name will be used for the creation of a new Xero Bank Account if a matching Xero Bank Account is not found.
    string accountName?;
    # Xero identifier for a bank account in Xero. Must be included if AccountNumber is not specified.
    string accountId?;
    # High level bank account type - BANK CREDITCARD BANK encompasses all bank account types other than credit cards.
    string accountType?;
    # 3 letter alpha code for the ISO-4217 currency code, e.g. USD, AUD.
    CurrencyCode currency?;
    # ISO-3166 alpha-2 country code, e.g. US, AU This element is required only when the Application supports multi-region. Talk to your Partner Manager to confirm if this is the case.
    CountryCode country?;
    # the current status of the feed connection
    string status?;
    # On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.
    Error _error?;
};

public type Statement record {
    # GUID used to identify the Statement.
    string id?;
    # The Xero generated feed connection Id that identifies the Xero Bank Account Container into which the statement should be delivered. This is obtained by calling GET FeedConnections.
    string feedConnectionId?;
    # Current status of statements
    string status?;
    # Opening balance date (can be no older than one year from the current date) ISO-8601 YYYY-MM-DD
    string startDate?;
    # Closing balance date ISO-8601 YYYY-MM-DD
    string endDate?;
    # The starting balance of the statement
    StartBalance startBalance?;
    # The StartBalance plus all the Statement Line Amounts should be equal to the EndBalance Amount.
    EndBalance endBalance?;
    StatementLines statementLines?;
    Error[] errors?;
    int statementLineCount?;
};

# The StartBalance plus all the Statement Line Amounts should be equal to the EndBalance Amount.
public type EndBalance record {
    # Amount
    float amount?;
    # If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.
    CreditDebitIndicator creditDebitIndicator?;
};

# On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.
public type Error record {
    # Human readable high level error description.
    string title?;
    # The numeric HTTP Status Code, e.g. 404
    int status?;
    # Human readable detailed error description.
    string detail?;
    # Identifies the type of error.
    string 'type?;
};

# The starting balance of the statement
public type StartBalance record {
    # decimal(19,4) unsigned Opening/closing balance amount.
    float amount?;
    # If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.
    CreditDebitIndicator creditDebitIndicator?;
};

# If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.
public type CreditDebitIndicator string;

# 3 letter alpha code for the ISO-4217 currency code, e.g. USD, AUD.
public type CurrencyCode string;

public type Pagination record {
    # Page number which specifies the set of records to retrieve. Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?page=2 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned.
    int page?;
    # Page size which specifies how many records per page will be returned (default 50). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100.
    int pageSize?;
    # Number of pages available
    int pageCount?;
    # Number of items returned
    int itemCount?;
};

# the lines details for a statement
public type StatementLine record {
    # The date that the transaction was processed or cleared as seen in internet banking ISO-8601 YYYY-MM-DD
    string postedDate?;
    # Transaction description
    string description?;
    # Transaction amount
    float amount?;
    # If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.
    CreditDebitIndicator creditDebitIndicator?;
    # Financial institute's internal transaction identifier. If provided this field is factored into duplicate detection.
    string transactionId?;
    # Typically the merchant or payee name
    string payeeName?;
    # Optional field to enhance the Description
    string reference?;
    # The cheque/check number
    string chequeNumber?;
    # Descriptive transaction type
    string transactionType?;
};

public type Statements record {
    Pagination pagination?;
    Statement[] items?;
};

public type StatementLines StatementLine[];

# ISO-3166 alpha-2 country code, e.g. US, AU This element is required only when the Application supports multi-region. Talk to your Partner Manager to confirm if this is the case.
public type CountryCode string;

public type FeedConnections record {
    Pagination pagination?;
    FeedConnection[] items?;
};
